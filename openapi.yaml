openapi: 3.0.0
info:
  version: 2.0.0
  title: RBKmoney Platform Analytics API
  description: >
    ## Описание

    RBKmoney Analytics API является точкой взаимодействия с аналитической и
    поисковой частью платформы. Все аналитическоие запросы осуществляются с
    помощью вызовов соответствующих методов API. Любые сторонние приложения,
    включая наши веб-сайты, личные кабинеты и другие UI-интерфейсы являются
    внешними приложениями-клиентами.


    RBKmoney Analytics API работает поверх HTTP-протокола. Мы используем REST
    архитектуру, схема описывается в соответствии со стандартом [OpenAPI
    v3.0](https://spec.openapis.org/oas/v3.0.0/). Коды возврата описываются
    соответствующими HTTP-статусами. Платформа принимает и возвращает
    JSON-структуры в HTTP body.


    ## Запросы

    Любой вызов методов API обязан предваряться предоставлением уникального для
    участника в пределах платформы ID запроса. Данный ID передается в
    соответствующем заголовке HTTP-запроса:

    ```
     X-Request-ID: oX5MWM2AQy
    ```

    Платформа гарантирует идемпотентность запросов, отправленных с одинаковым
    ID.

    ## Тип содержимого и кодировка

    Любой запрос к API должен выполняться в кодировке UTF-8 и с указанием
    содержимого в формате JSON

    ```
      Content-Type: application/json; charset=utf-8
    ```


    ## Формат дат

    Платформа принимает значения date-time в стандарте ISO 8601 с обязательным
    указанием UTC-оффсета, например:

    ```
      2017-01-01T00:00:00Z
      2017-01-01T00:00:01+00:00
    ```

    ## Максимальное время обработки запроса

    К любому вызову методов API можно добавить параметр отсечки по времени,
    определяющий максимальное время ожидания завершения операции по запросу.
    Данная отсечка передается в соответствующем заголовке HTTP-запроса:

    ```
     X-Request-Deadline: 10s
    ```

    Значение отсечки может быть задано в формате ISO 8601 (см. [Формат
    дат](#section/Format-dat)), либо в относительных величинах, например:

    `150000ms`, `540s`, `3.5m` При этом возможные единицы измерения `ms`, `s`,
    `m`. В обоих случаях  не рекомендуется, чтобы задаваемое значение было
    меньше **3 секунд** и превышало **1 минуту**.

    ## Поиск по магазинам

    API предоставляет несколько различных критериев для выбора магазинов, в
    рамках которых будет выполняться поиск или аналитика: `shopID`, `shopIDs`,
    `paymentInstitutionRealm`, `excludeShopIDs`. В случае использования
    нескольких критериев одновременно в выборку будут включены магазины,
    подпадающие под хотя бы один из перечисленных критериев.


    ## Коды ошибок

    ### Ошибки бизнес-логики

    Все ошибки бизнес-логики имеют следуюший вид:

      ```json
      {
        "code": "string",
        "message": "string"
      }
      ```

    В поле `code` содержится тип ошибки, а в `message` - дополнительная
    информация по произошедшей ошибке.

    На данный момент существуют следующие коды ошибок:

      | Код                              | Описание                                                                                                                              |
      | ---                              | --------                                                                                                                              |
      | **invalidDeadline**              | Неверный формат максимального времени обработки запроса.                                                                              |
      | **ambiguousPartyID**             | Невозможно однозначно определить идентификатор участника, укажите идентификатор в запросе явно.                                       |
      | **invalidPartyID**               | Участник с указанным идентификатором не существует или недоступен.                                                                    |
      | **invalidRequest**               | Прочие неверные данные запроса.                                                                                                       |
      | **limitExceeded**                | Запрашеваемое количество данных должно быть меньше чем указано.                                                                                                       |
      | **badContinuationToken**         | Не валидный ContinuationToken.                                                                                                       |

    ### Общие ошибки

    Ошибки возникающие при попытках совершения операций с незарегистрированными
    в системе объектами. Имеют вид

      ```json
      {
          "message": "string"
      }
      ```

    В поле `message` содержится информация по произошедшей ошибке. Например:

      ```json
      {
          "message": "Invalid token"
      }
      ```

    ### Ошибки обработки запросов

    В процессе обработки запросов силами нашей платформы могут происходить
    различные непредвиденные ситуации. Об их появлении платформа сигнализирует
    по протоколу HTTP соответствующими [статусами][5xx], обозначающими ошибки
    сервера.

      |  Код    |  Описание  |
      | ------- | ---------- |
      | **500** | В процессе обработки платформой запроса возникла непредвиденная ситуация. При получении подобного кода ответа мы рекомендуем обратиться в техническую поддержку. |
      | **503** | Платформа временно недоступна и не готова обслуживать данный запрос. Запрос гарантированно не выполнен, при получении подобного кода ответа попробуйте выполнить его позднее, когда доступность платформы будет восстановлена. |
      | **504** | Платформа превысила допустимое время обработки запроса, результат запроса не определён. Попробуйте отправить запрос повторно или выяснить результат выполнения исходного запроса, если повторное исполнение запроса нежелательно. |

    [5xx]: https://tools.ietf.org/html/rfc7231#section-6.6


    Если вы получили ошибку, которой нет в данном описании, обратитесь в
    техническую поддержку.
  termsOfService: https://rbk.money/
  contact:
    name: RBKmoney support team
    email: support@rbk.money
    url: https://api.rbk.money/lk/v2
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api.rbk.money/lk/v2
security:
  - bearer: []
tags:
  - name: Search
    description: >
      Для получения списка всех инвойсов/платежей указанного магазина необходимо
      вызвать соответствующий метод платформы. Имеется возможность отфильтровать
      выборку по определенным статусам.
    x-displayName: Поиск
  - name: Reports
    description: >
      Один раз в отчетный период платформа автоматически подготавливает и
      размещает документы в формате XLSX с разбиением по магазину активной
      категории. Также, каждый документ будет подписан [квалифицированной
      ЭЦП](https://digital.gov.ru/ru/appeals/faq/31/). Данная подпись является
      юридически значимой и позволяет полностью отказаться от бумажного
      документооборота.
    x-displayName: Отчеты
  - name: Analytics
    description: |
      Аналитические методы по статистике платежей
    x-displayName: Аналитика
paths:
  /analytics/payments/amount:
    get:
      description: Получение списка оборотов с группировкой по валютам
      summary: Получение списка оборотов с группировкой по валютам
      tags:
        - Analytics
      operationId: getPaymentsAmount
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/excludeShopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
      responses:
        '200':
          description: Список оборотов с группировкой по валютам
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/AmountResult'
        '400':
          $ref: '#/components/responses/DefaultLogicError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /analytics/payments/average:
    get:
      description: Получение среднего размера платежа с группировкой по валютам
      summary: Получение среднего размера платежа с группировкой по валютам
      tags:
        - Analytics
      operationId: getAveragePayment
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/excludeShopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
      responses:
        '200':
          description: Средний размер платежа с группировкой по валютам
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/AmountResult'
        '400':
          $ref: '#/components/responses/DefaultLogicError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /analytics/payments/count:
    get:
      description: Получение количества платежей с группировкой по валютам
      summary: Получение количества платежей с группировкой по валютам
      tags:
        - Analytics
      operationId: getPaymentsCount
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/excludeShopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
      responses:
        '200':
          description: Среднее количество платежей с группировкой по валютам
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/CountResult'
        '400':
          $ref: '#/components/responses/DefaultLogicError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /analytics/payments/errors:
    get:
      description: Получение распределения ошибок
      summary: Получение распределения ошибок
      tags:
        - Analytics
      operationId: getPaymentsErrorDistribution
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/excludeShopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
      responses:
        '200':
          description: Распределение ошибок
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentsErrorsDistributionResult'
        '400':
          $ref: '#/components/responses/DefaultLogicError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /analytics/payments/split-amount:
    get:
      description: >-
        Получение списка оборотов с группировкой по валютам и разделенные по
        временным интервалам
      summary: >-
        Получение списка оборотов с группировкой по валютам и разделенные по
        временным интервалам
      tags:
        - Analytics
      operationId: getPaymentsSplitAmount
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/excludeShopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
        - $ref: '#/components/parameters/splitUnitRequired'
      responses:
        '200':
          description: >-
            Список оборотов с группировкой по валютам и разделенные по временным
            интервалам
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/SplitAmountResult'
        '400':
          $ref: '#/components/responses/DefaultLogicError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /analytics/payments/split-count:
    get:
      description: >-
        Получение количества платежей с группировкой по валютам и статусам,
        разделенного по временным интервалам
      summary: >-
        Получение количества платежей с группировкой по валютам и статусам,
        разделенного по временным интервалам
      tags:
        - Analytics
      operationId: getPaymentsSplitCount
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/excludeShopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
        - $ref: '#/components/parameters/splitUnitRequired'
      responses:
        '200':
          description: >-
            Количество платежей с группировкой по валютам и статусам,
            разделенное по временным интервалам
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/SplitCountResult'
        '400':
          $ref: '#/components/responses/DefaultLogicError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /analytics/payments/sub-errors:
    get:
      description: Получение распределения ошибок с подошибками
      summary: Получение распределения ошибок с подошибками
      tags:
        - Analytics
      operationId: getPaymentsSubErrorDistribution
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/excludeShopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
      responses:
        '200':
          description: Распределение ошибок с подошибками
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentsSubErrorsDistributionResult'
        '400':
          $ref: '#/components/responses/DefaultLogicError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /analytics/payments-tool:
    get:
      description: Получение распределения использования платежных инструментов
      summary: Получение распределения использования платежных инструментов
      tags:
        - Analytics
      operationId: getPaymentsToolDistribution
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/excludeShopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
      responses:
        '200':
          description: Распределение использования платежных инструментов
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentsToolDistributionResult'
        '400':
          $ref: '#/components/responses/DefaultLogicError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /analytics/refunds/amount:
    get:
      description: Получение списка возвратов с группировкой по валютам
      summary: Получение списка возвратов с группировкой по валютам
      tags:
        - Analytics
      operationId: getRefundsAmount
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/excludeShopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
      responses:
        '200':
          description: Список возвратов с группировкой по валютам
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/AmountResult'
        '400':
          $ref: '#/components/responses/DefaultLogicError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /analytics/balances/current:
    get:
      description: Получение текущего баланса по магазину
      summary: Получение текущего баланса по магазину
      tags:
        - Analytics
      operationId: getCurrentBalances
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/excludeShopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
      responses:
        '200':
          description: Список оборотов с группировкой по валютам
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/AmountResult'
        '400':
          $ref: '#/components/responses/DefaultLogicError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /analytics/balances/current-shop-balances:
    get:
      description: Получение текущего баланса с группировкой по магазинам
      summary: Получение текущего баланса с группировкой по магазинам
      tags:
        - Analytics
      operationId: getCurrentShopBalances
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/excludeShopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
      responses:
        '200':
          description: Список балансов с группировкой по магазинам
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/ShopAmountResult'
        '400':
          $ref: '#/components/responses/DefaultLogicError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /analytics/crediting/amount:
    get:
      description: Получение списка зачислений с группировкой по валютам для ЛК
      summary: Получение списка зачислений с группировкой по валютам для ЛК
      tags:
        - Analytics
      operationId: getCreditingsAmount
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/excludeShopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
      responses:
        '200':
          description: Список зачислений с группировкой по валютам для ЛК
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/AmountResult'
        '400':
          $ref: '#/components/responses/DefaultLogicError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /invoices:
    get:
      description: Поиск инвойсов
      summary: Поиск инвойсов
      tags:
        - Search
      operationId: searchInvoices
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopID'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
        - $ref: '#/components/parameters/limitRequired'
        - $ref: '#/components/parameters/invoiceID'
        - $ref: '#/components/parameters/invoiceIDs'
        - name: invoiceStatus
          in: query
          description: Статус инвойса для поиска
          required: false
          schema:
            type: string
            enum:
              - unpaid
              - cancelled
              - paid
              - fulfilled
        - name: invoiceAmountFrom
          in: query
          description: Минимальная сумма инвойса
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: invoiceAmountTo
          in: query
          description: Максимальная сумма инвойса
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: externalID
          in: query
          description: Внешний идентификатор
          required: false
          schema:
            type: string
            maxLength: 40
            minLength: 1
        - name: continuationToken
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ContinuationToken'
      responses:
        '200':
          description: Найденные инвойсы
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  continuationToken:
                    $ref: '#/components/schemas/ContinuationToken'
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Invoice'
        '400':
          $ref: '#/components/responses/SearchRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /payments:
    get:
      description: Поиск платежей
      summary: Поиск платежей
      tags:
        - Search
      operationId: searchPayments
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopID'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/excludeShopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
        - $ref: '#/components/parameters/limitRequired'
        - $ref: '#/components/parameters/invoiceID'
        - $ref: '#/components/parameters/invoiceIDs'
        - $ref: '#/components/parameters/paymentID'
        - name: paymentStatus
          in: query
          description: Статус платежа для поиска
          required: false
          schema:
            type: string
            enum:
              - pending
              - processed
              - captured
              - cancelled
              - refunded
              - failed
        - name: paymentFlow
          in: query
          description: Flow платежа
          required: false
          schema:
            type: string
            enum:
              - instant
              - hold
        - name: paymentMethod
          in: query
          description: Метод оплаты
          required: false
          schema:
            type: string
            enum:
              - bankCard
              - paymentTerminal
        - name: paymentTerminalProvider
          in: query
          description: Провайдер платежного терминала
          required: false
          schema:
            type: string
            enum:
              - euroset
              - wechat
              - alipay
              - zotapay
              - qps
              - uzcard
              - rbs
        - name: payerEmail
          in: query
          description: Email, указанный при оплате
          required: false
          schema:
            type: string
            format: email
            maxLength: 100
        - name: payerIP
          in: query
          description: IP-адрес плательщика
          required: false
          schema:
            type: string
            format: ip-address
            maxLength: 45
        - name: payerFingerprint
          in: query
          description: Уникальный отпечаток user agent'а плательщика
          required: false
          schema:
            type: string
            maxLength: 1000
        - name: customerID
          in: query
          description: Идентификатор плательщика
          required: false
          schema:
            type: string
            maxLength: 40
            minLength: 1
        - name: first6
          in: query
          description: Первые 6 цифр номера карты
          required: false
          schema:
            type: string
            pattern: ^\d{6}$
        - name: last4
          in: query
          description: Последние 4 цифры номера карты
          required: false
          schema:
            type: string
            pattern: ^\d{4}$
        - name: rrn
          in: query
          description: Retrieval Reference Number
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]{12}$
        - name: approvalCode
          in: query
          description: Authorization Approval Code
          required: false
          schema:
            type: string
            maxLength: 40
            minLength: 1
        - name: bankCardTokenProvider
          in: query
          required: false
          schema:
            description: Провайдер платежных токенов
            type: string
            enum:
              - applepay
              - googlepay
              - samsungpay
              - yandexpay
        - name: bankCardPaymentSystem
          in: query
          required: false
          schema:
            description: Платежная система
            type: string
            enum:
              - visa
              - mastercard
              - visaelectron
              - maestro
              - forbrugsforeningen
              - dankort
              - amex
              - dinersclub
              - discover
              - unionpay
              - jcb
              - nspkmir
              - elo
              - rupay
              - dummy
              - uzcard
        - name: paymentAmountFrom
          in: query
          description: Минимальная сумма платежа
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: paymentAmountTo
          in: query
          description: Максимальная сумма платежа
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: externalID
          in: query
          description: Внешний идентификатор
          required: false
          schema:
            type: string
            maxLength: 40
            minLength: 1
        - name: continuationToken
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ContinuationToken'
      responses:
        '200':
          description: Найденные платежи
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  continuationToken:
                    $ref: '#/components/schemas/ContinuationToken'
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentSearchResult'
        '400':
          $ref: '#/components/responses/SearchRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /refunds:
    get:
      description: Поиск возвратов
      summary: Поиск возвратов
      tags:
        - Search
      operationId: searchRefunds
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopID'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
        - $ref: '#/components/parameters/limitRequired'
        - $ref: '#/components/parameters/invoiceID'
        - $ref: '#/components/parameters/invoiceIDs'
        - $ref: '#/components/parameters/paymentID'
        - name: refundID
          in: query
          description: Идентификатор возврата
          required: false
          schema:
            type: string
            maxLength: 40
            minLength: 1
        - name: refundStatus
          in: query
          description: Статус возврата
          schema:
            type: string
            enum:
              - pending
              - succeeded
              - failed
        - name: externalID
          in: query
          description: Внешний идентификатор
          required: false
          schema:
            type: string
            maxLength: 40
            minLength: 1
        - name: continuationToken
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ContinuationToken'
      responses:
        '200':
          description: Найденные возвраты
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                  continuationToken:
                    $ref: '#/components/schemas/ContinuationToken'
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/RefundSearchResult'
        '400':
          $ref: '#/components/responses/SearchRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /chargebacks:
    get:
      description: Поиск чарджбэков
      summary: Поиск чарджбэков
      tags:
        - Search
      operationId: searchChargebacks
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopID'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
        - $ref: '#/components/parameters/limitRequired'
        - $ref: '#/components/parameters/invoiceID'
        - $ref: '#/components/parameters/paymentID'
        - name: chargebackID
          in: query
          description: Идентификатор чарджбэка
          required: false
          schema:
            type: string
            maxLength: 40
            minLength: 1
        - name: chargebackStatuses
          in: query
          description: Статусы чарджбэков
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - pending
                - accepted
                - rejected
                - cancelled
        - name: chargebackStages
          in: query
          description: Этапы чарджбэков
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - chargeback
                - pre_arbitration
                - arbitration
        - name: chargebackCategories
          in: query
          description: Категории чарджбэков
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - fraud
                - dispute
                - authorisation
                - processing_error
        - name: continuationToken
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ContinuationToken'
      responses:
        '200':
          description: Найденные чарджбэки
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                  continuationToken:
                    $ref: '#/components/schemas/ContinuationToken'
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Chargeback'
        '400':
          $ref: '#/components/responses/SearchRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /payouts:
    get:
      description: Поиск выплат
      summary: Поиск выплат
      tags:
        - Search
      operationId: searchPayouts
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopID'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
        - $ref: '#/components/parameters/limitRequired'
        - name: payoutID
          in: query
          description: Идентификатор выплаты
          required: false
          schema:
            type: string
            maxLength: 40
            minLength: 1
        - name: payoutToolType
          in: query
          required: false
          schema:
            type: string
            enum:
              - PayoutAccount
              - Wallet
              - PaymentInstitutionAccount
            description: |
              Тип выплаты для поиска
                * PayoutAccount - выплата на банковский счёт
                * Wallet - выплата на кошелёк
                * PaymentInstitutionAccount - выплата на счёт платежной организации
        - name: continuationToken
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ContinuationToken'
      responses:
        '200':
          description: Найденные выплаты
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                  continuationToken:
                    $ref: '#/components/schemas/ContinuationToken'
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Payout'
        '400':
          $ref: '#/components/responses/SearchRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /invoice-templates:
    get:
      description: Поиск шаблонов инвойсов
      summary: Поиск шаблонов инвойсов
      tags:
        - Search
      operationId: searchInvoiceTemplates
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopIDs'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
        - $ref: '#/components/parameters/limitRequired'
        - name: invoiceTemplateID
          in: query
          description: Идентификатор шаблона инвойса
          required: false
          schema:
            type: string
            maxLength: 40
            minLength: 1
        - name: invoiceTemplateStatus
          in: query
          description: Статус шаблона инвойса для поиска
          required: false
          schema:
            type: string
            enum:
              - created
              - deleted
        - name: name
          in: query
          description: Название шаблона инвойса
          required: false
          schema:
            type: string
            maxLength: 40
            minLength: 1
        - name: product
          in: query
          description: Наименование товара или услуги
          required: false
          schema:
            type: string
            maxLength: 40
            minLength: 1
        - name: invoiceValidUntil
          in: query
          description: Срок действия шаблона
          required: false
          schema:
            type: string
            format: date-time
        - name: continuationToken
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ContinuationToken'
      responses:
        '200':
          description: Найденные шаблоны инвойсов
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  continuationToken:
                    $ref: '#/components/schemas/ContinuationToken'
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/InvoiceTemplate'
        '400':
          $ref: '#/components/responses/SearchRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /reports:
    post:
      description: >-
        Сгенерировать отчет с указанным типом по магазину за указанный
        промежуток времени
      summary: >-
        Сгенерировать отчет с указанным типом по магазину за указанный
        промежуток времени
      tags:
        - Reports
      operationId: createReport
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopID'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
        - name: reportType
          in: query
          description: Тип отчета
          required: true
          schema:
            type: string
            enum:
              - paymentRegistry
      responses:
        '201':
          description: Отчет создан
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Report'
        '400':
          description: Ошибочные данные для генерации
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    description: |
                      [Код ошибки](#section/Kody-oshibok)
                    type: string
                    enum:
                      - ambiguousPartyID
                      - invalidShopID
                      - invalidRequest
                      - invalidDeadline
                  message:
                    description: Человекочитаемое описание ошибки
                    type: string
                    example: Invalid shop id
        '401':
          $ref: '#/components/responses/Unauthorized'
    get:
      description: Получить список отчетов по данному магазину за период
      summary: Получить список отчетов по данному магазину за период
      tags:
        - Reports
      operationId: searchReports
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/shopID'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/fromTimeRequired'
        - $ref: '#/components/parameters/toTimeRequired'
        - $ref: '#/components/parameters/limitRequired'
        - name: reportTypes
          description: Типы отчетов
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
              enum:
                - provisionOfService
                - paymentRegistry
                - paymentRegistryByPayout
        - name: continuationToken
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ContinuationToken'
      responses:
        '200':
          description: Найденные отчеты
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  continuationToken:
                    $ref: '#/components/schemas/ContinuationToken'
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Report'
        '400':
          description: Ошибочные данные для получения
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    description: |
                      [Код ошибки](#section/Kody-oshibok)
                    type: string
                    enum:
                      - ambiguousPartyID
                      - limitExceeded
                      - invalidRequest
                      - invalidPartyID
                      - invalidDeadline
                  message:
                    description: Человекочитаемое описание ошибки
                    type: string
                    example: 'Max limit: 1000'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /reports/{reportID}:
    get:
      description: Получить отчет по данному идентификатору
      summary: Получить отчет по данному идентификатору
      tags:
        - Reports
      operationId: getReport
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/reportIDPathRequired'
      responses:
        '200':
          description: Найденный отчет
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Report'
        '400':
          $ref: '#/components/responses/DefaultLogicError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /reports/{reportID}/cancel:
    post:
      description: >-
        Отменить указанный отчет. Отчеты типа `provisionOfService` отменить
        нельзя
      summary: >-
        Отменить указанный отчет. Отчеты типа `provisionOfService` отменить
        нельзя
      tags:
        - Reports
      operationId: cancelReport
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/reportIDPathRequired'
      responses:
        '202':
          description: Запрос на отмену отчета принят
        '400':
          $ref: '#/components/responses/DefaultLogicError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /reports/{reportID}/files/{fileID}/download:
    get:
      description: Скачать файл
      summary: Скачать файл
      tags:
        - Reports
      operationId: downloadFile
      parameters:
        - $ref: '#/components/parameters/requestIDRequired'
        - $ref: '#/components/parameters/deadline'
        - $ref: '#/components/parameters/partyIDRequired'
        - $ref: '#/components/parameters/paymentInstitutionRealm'
        - $ref: '#/components/parameters/reportIDPathRequired'
        - $ref: '#/components/parameters/fileIDPathRequired'
      responses:
        '200':
          description: Download link
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ReportLink'
        '400':
          $ref: '#/components/responses/DefaultLogicError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  securitySchemes:
    bearer:
      type: apiKey
      name: Authorization
      in: header
      description: >
        Для аутентификации вызовов мы используем [JWT](https://jwt.io).
        Соответствующий ключ передается в заголовке.

        ```shell
         Authorization: Bearer {JWT}
        ```

        Посмотреть ваш API-ключ вы можете в [личном
        кабинете](https://dashboard.rbk.money/).


        Помните, что вы никому не должны передавать ваш API ключ!
  parameters:
    requestIDRequired:
      name: X-Request-ID
      in: header
      description: Уникальный идентификатор запроса к системе
      required: true
      schema:
        type: string
        maxLength: 32
        minLength: 1
    deadline:
      name: X-Request-Deadline
      in: header
      description: Максимальное время обработки запроса
      required: false
      schema:
        type: string
        maxLength: 40
        minLength: 1
    partyIDRequired:
      name: partyID
      in: query
      description: Уникальный идентификатор участника в рамках платформы
      required: true
      schema:
        type: string
        maxLength: 40
        minLength: 1
    shopIDs:
      name: shopIDs
      in: query
      description: Идентификаторы магазинов
      required: false
      schema:
        type: array
        items:
          type: string
    excludeShopIDs:
      name: excludeShopIDs
      in: query
      description: Идентификаторы магазинов, исключаемых из запроса
      required: false
      schema:
        type: array
        items:
          type: string
    paymentInstitutionRealm:
      name: paymentInstitutionRealm
      in: query
      description: Тип магазина, тестовый или «боевой»
      required: false
      schema:
        type: string
        enum:
          - live
          - test
    fromTimeRequired:
      name: fromTime
      in: query
      description: Начало временного отрезка
      required: true
      schema:
        type: string
        format: date-time
    toTimeRequired:
      name: toTime
      in: query
      description: Конец временного отрезка
      required: true
      schema:
        type: string
        format: date-time
    splitUnitRequired:
      name: splitUnit
      in: query
      description: Единица времени сегмента разбиения
      required: true
      schema:
        type: string
        enum:
          - minute
          - hour
          - day
          - week
          - month
          - year
    shopID:
      name: shopID
      in: query
      description: Идентификатор магазина
      required: false
      schema:
        type: string
        maxLength: 40
        minLength: 1
    limitRequired:
      name: limit
      in: query
      description: Лимит выборки
      required: true
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 1000
    invoiceID:
      name: invoiceID
      in: query
      description: Идентификатор инвойса
      required: false
      schema:
        type: string
        maxLength: 40
        minLength: 1
    invoiceIDs:
      name: invoiceIDs
      in: query
      description: Список инвойсов
      required: false
      schema:
        type: array
        items:
          type: string
    paymentID:
      name: paymentID
      in: query
      description: Идентификатор платежа в рамках инвойса
      required: false
      schema:
        type: string
        maxLength: 40
        minLength: 1
    reportIDPathRequired:
      name: reportID
      in: path
      description: Идентификатор отчета
      required: true
      schema:
        type: integer
        format: int64
    fileIDPathRequired:
      name: fileID
      in: path
      description: Идентификатор файла
      required: true
      schema:
        type: string
        maxLength: 40
        minLength: 1
  schemas:
    Currency:
      description: >-
        Валюта, символьный код согласно [ISO
        4217](https://www.iso.org/iso-4217-currency-codes.html).
      type: string
      pattern: ^[A-Z]{3}$
    AmountResult:
      type: object
      allOf:
        - type: object
          required:
            - amount
            - currency
          properties:
            amount:
              description: >
                Стоимость предлагаемых товаров или услуг, в минорных денежных

                единицах, например в копейках в случае указания российских
                рублей в

                качестве валюты.
              type: integer
              format: int64
            currency:
              $ref: '#/components/schemas/Currency'
    DefaultLogicError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          description: |
            [Код ошибки](#section/Kody-oshibok)
          type: string
          enum:
            - invalidRequest
            - ambiguousPartyID
            - invalidDeadline
            - invalidPartyID
        message:
          description: Человекочитаемое описание ошибки
          type: string
    CountResult:
      type: object
      allOf:
        - type: object
          required:
            - count
            - currency
          properties:
            count:
              description: Общее количество операций
              type: integer
              format: int64
              minimum: 0
            currency:
              $ref: '#/components/schemas/Currency'
    PaymentsErrorsDistributionResult:
      type: object
      allOf:
        - type: object
          required:
            - error
            - percents
          properties:
            error:
              description: Тип ошибки
              type: string
            percents:
              description: Относительное колличество ошибок в процентах
              type: number
              format: double
              minimum: 0
    SplitUnit:
      description: Единица времени сегмента разбиения
      type: string
      enum:
        - minute
        - hour
        - day
        - week
        - month
        - year
    OffsetAmount:
      type: object
      required:
        - amount
        - offset
      properties:
        amount:
          description: |
            Стоимость предлагаемых товаров или услуг, в минорных денежных
            единицах, например в копейках в случае указания российских рублей в
            качестве валюты.
          type: integer
          format: int64
          minimum: 1
        offset:
          description: Номер интервала в списке
          type: integer
          format: int64
          minimum: 0
    SplitAmountResult:
      type: object
      required:
        - splitUnit
        - currency
        - offsetAmounts
      properties:
        splitUnit:
          $ref: '#/components/schemas/SplitUnit'
        currency:
          $ref: '#/components/schemas/Currency'
        offsetAmounts:
          type: array
          items:
            $ref: '#/components/schemas/OffsetAmount'
    OffsetCount:
      type: object
      allOf:
        - type: object
          required:
            - count
            - offset
          properties:
            count:
              description: Общее количество операций
              type: integer
              format: int64
              minimum: 0
            offset:
              description: Номер интервала в списке
              type: integer
              format: int64
              minimum: 0
    StatusOffsetCount:
      type: object
      required:
        - status
        - offsetCount
      properties:
        status:
          description: Статус платежа
          type: string
          enum:
            - pending
            - processed
            - captured
            - cancelled
            - refunded
            - failed
        offsetCount:
          type: array
          items:
            $ref: '#/components/schemas/OffsetCount'
    SplitCountResult:
      type: object
      required:
        - currency
        - statusOffsetCounts
        - splitUnit
      properties:
        splitUnit:
          $ref: '#/components/schemas/SplitUnit'
        currency:
          $ref: '#/components/schemas/Currency'
        statusOffsetCounts:
          type: array
          items:
            $ref: '#/components/schemas/StatusOffsetCount'
    SubError:
      description: |
        Детализация описания ошибки
      type: object
      required:
        - code
      properties:
        code:
          description: Детализация кода ошибки
          type: string
        subError:
          $ref: '#/components/schemas/SubError'
    PaymentsSubErrorsDistributionResult:
      type: object
      allOf:
        - type: object
          required:
            - error
            - percents
          properties:
            error:
              $ref: '#/components/schemas/SubError'
            percents:
              description: Относительное колличество ошибок в процентах
              type: number
              format: double
              minimum: 0
    PaymentsToolDistributionResult:
      type: object
      allOf:
        - type: object
          required:
            - name
            - percents
          properties:
            name:
              description: Название платежного средства
              type: string
            percents:
              description: Колличество использования платежного инструмента в процентах
              type: number
              format: double
              minimum: 0
    ShopAmountResult:
      description: |
        Список балансов магазина
      type: object
      required:
        - id
      properties:
        id:
          description: Идентификатор магазина
          type: string
        amountResults:
          type: array
          items:
            $ref: '#/components/schemas/AmountResult'
    ContinuationToken:
      description: >
        Токен, сигнализирующий о том, что в ответе передана только часть данных.

        Для получения следующей части нужно повторно обратиться к сервису,
        указав тот же набор условий и полученый токен.

        Если токена нет, получена последняя часть данных.
      type: string
    InvoiceLineTaxMode:
      description: >
        Схема налогообложения предлагаемого товара или услуги.

        Указывается, только если предлагаемый товар или услуга облагается
        налогом.
      type: object
      properties:
        type:
          description: Тип схемы налогообложения
          type: string
      required:
        - type
      discriminator:
        propertyName: type
        mapping:
          InvoiceLineTaxVAT: '#/components/schemas/InvoiceLineTaxVAT'
    InvoiceLineTaxVAT:
      type: object
      allOf:
        - $ref: '#/components/schemas/InvoiceLineTaxMode'
        - description: Налог на добавленную стоимость в юрисдикции РФ
          type: object
          required:
            - rate
          properties:
            rate:
              description: Ставка налога
              type: string
              enum:
                - 0%
                - 10%
                - 18%
                - 20%
                - 10/110
                - 18/118
                - 20/120
    InvoiceLine:
      description: Позиция товара или услуги
      type: object
      required:
        - product
        - quantity
        - price
      properties:
        product:
          description: Описание предлагаемого товара или услуги
          type: string
          maxLength: 1000
        quantity:
          description: |
            Количество единиц товаров или услуг, предлагаемых на продажу в этой
            позиции
          type: integer
          format: int64
          minimum: 1
          default: 1
        price:
          description: >
            Цена предлагаемого товара или услуги, в минорных денежных единицах,
            например

            в копейках в случае указания российских рублей в качестве валюты
          type: integer
          format: int64
          minimum: 1
        cost:
          description: >
            Суммарная стоимость позиции с учётом количества единиц товаров или
            услуг
          type: integer
          format: int64
          minimum: 1
        taxMode:
          $ref: '#/components/schemas/InvoiceLineTaxMode'
    InvoiceCart:
      description: |
        Корзина с набором позиций продаваемых товаров или услуг
      type: array
      minItems: 1
      maxItems: 100
      items:
        $ref: '#/components/schemas/InvoiceLine'
    InvoiceStatus:
      type: object
      required:
        - status
      properties:
        status:
          description: Статус инвойса
          type: string
          enum:
            - unpaid
            - cancelled
            - paid
            - fulfilled
        reason:
          description: Причина отмены или погашения инвойса
          type: string
          maxLength: 1000
    Invoice:
      type: object
      allOf:
        - type: object
          required:
            - id
            - shopID
            - createdAt
            - dueDate
            - amount
            - currency
            - product
            - metadata
          properties:
            id:
              description: Идентификатор инвойса
              type: string
            externalID:
              description: Внешний идентификатор
              type: string
            shopID:
              description: Идентификатор магазина
              type: string
            createdAt:
              description: Дата и время создания
              type: string
              format: date-time
            dueDate:
              description: Дата и время окончания действия
              type: string
              format: date-time
            amount:
              description: >
                Стоимость предлагаемых товаров или услуг, в минорных денежных
                единицах,

                например в копейках в случае указания российских рублей в
                качестве валюты.
              type: integer
              format: int64
              minimum: 1
            currency:
              $ref: '#/components/schemas/Currency'
            product:
              description: Наименование предлагаемых товаров или услуг
              type: string
              maxLength: 100
            description:
              description: Описание предлагаемых товаров или услуг
              type: string
              maxLength: 1000
            invoiceTemplateID:
              description: Идентификатор шаблона (для инвойсов, созданных по шаблону).
              type: string
            cart:
              $ref: '#/components/schemas/InvoiceCart'
            metadata:
              description: Связанные с инвойсом метаданные
              type: object
        - $ref: '#/components/schemas/InvoiceStatus'
    SearchRequestError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          description: |
            [Код ошибки](#section/Kody-oshibok)
          type: string
          enum:
            - invalidRequest
            - invalidDeadline
            - limitExceeded
            - badContinuationToken
        message:
          description: Человекочитаемое описание ошибки
          type: string
    PaymentError:
      description: |
        [Ошибка, возникшая в процессе проведения платежа](#tag/Error-Codes)
      type: object
      required:
        - code
      properties:
        code:
          description: Основной код ошибки
          type: string
        subError:
          $ref: '#/components/schemas/SubError'
    PaymentStatus:
      type: object
      required:
        - status
      properties:
        status:
          description: Статус платежа
          type: string
          enum:
            - pending
            - processed
            - captured
            - cancelled
            - refunded
            - failed
            - chargedback
        error:
          $ref: '#/components/schemas/PaymentError'
    Payer:
      type: object
      properties:
        payerType:
          description: Тип платежного средства
          type: string
      required:
        - payerType
      discriminator:
        propertyName: payerType
        mapping:
          CustomerPayer: '#/components/schemas/CustomerPayer'
          PaymentResourcePayer: '#/components/schemas/PaymentResourcePayer'
          RecurrentPayer: '#/components/schemas/RecurrentPayer'
    PaymentToolDetails:
      type: object
      description: Детали платежного средства
      required:
        - detailsType
      properties:
        detailsType:
          description: Тип информации о платежном средстве
          type: string
      discriminator:
        propertyName: detailsType
        mapping:
          PaymentToolDetailsBankCard: '#/components/schemas/PaymentToolDetailsBankCard'
          PaymentToolDetailsCryptoWallet: '#/components/schemas/PaymentToolDetailsCryptoWallet'
          PaymentToolDetailsMobileCommerce: '#/components/schemas/PaymentToolDetailsMobileCommerce'
          PaymentToolDetailsPaymentTerminal: '#/components/schemas/PaymentToolDetailsPaymentTerminal'
    BankCardPaymentSystem:
      description: Платежная система
      type: string
      enum:
        - visa
        - mastercard
        - visaelectron
        - maestro
        - forbrugsforeningen
        - dankort
        - amex
        - dinersclub
        - discover
        - unionpay
        - jcb
        - nspkmir
        - elo
        - rupay
        - dummy
        - uzcard
    BankCardTokenProvider:
      description: Провайдер платежных токенов
      type: string
      enum:
        - applepay
        - googlepay
        - samsungpay
        - yandexpay
    BankCardDetails:
      required:
        - cardNumberMask
        - paymentSystem
      properties:
        cardNumberMask:
          description: Маскированый номер карты
          type: string
          pattern: ^\d{6,8}\*+\d{2,4}$
        bin:
          description: BIN банка-эмитента карты
          type: string
          pattern: ^(\d{0}|\d{6,8})$
        lastDigits:
          description: Последние цифры номера карты
          type: string
          pattern: ^\d{2,4}$
        paymentSystem:
          $ref: '#/components/schemas/BankCardPaymentSystem'
        tokenProvider:
          $ref: '#/components/schemas/BankCardTokenProvider'
    PaymentToolDetailsBankCard:
      type: object
      allOf:
        - $ref: '#/components/schemas/PaymentToolDetails'
        - $ref: '#/components/schemas/BankCardDetails'
    CryptoCurrency:
      description: Тип криптовалюты
      type: string
      enum:
        - bitcoin
        - litecoin
        - bitcoinCash
        - ripple
        - ethereum
        - zcash
    CryptoWalletDetails:
      required:
        - cryptoCurrency
      properties:
        cryptoCurrency:
          $ref: '#/components/schemas/CryptoCurrency'
    PaymentToolDetailsCryptoWallet:
      type: object
      allOf:
        - $ref: '#/components/schemas/PaymentToolDetails'
        - $ref: '#/components/schemas/CryptoWalletDetails'
    MobileCommerceDetails:
      required:
        - phoneNumber
      properties:
        phoneNumber:
          description: Маскированый номер мобильного телефона
          type: string
          pattern: ^\+\d\*{1,10}\d{2,4}$
          example: +7******0102
    PaymentToolDetailsMobileCommerce:
      type: object
      allOf:
        - $ref: '#/components/schemas/PaymentToolDetails'
        - $ref: '#/components/schemas/MobileCommerceDetails'
    PaymentTerminalProvider:
      description: Провайдер терминальной сети
      type: string
      enum:
        - euroset
        - wechat
        - alipay
        - zotapay
        - qps
        - uzcard
        - rbs
    PaymentTerminalDetails:
      required:
        - provider
      properties:
        provider:
          $ref: '#/components/schemas/PaymentTerminalProvider'
    PaymentToolDetailsPaymentTerminal:
      type: object
      allOf:
        - $ref: '#/components/schemas/PaymentToolDetails'
        - $ref: '#/components/schemas/PaymentTerminalDetails'
    CustomerPayer:
      type: object
      description: Многоразовое платежное средство
      allOf:
        - $ref: '#/components/schemas/Payer'
        - type: object
          required:
            - customerID
          properties:
            customerID:
              description: Идентификатор плательщика
              type: string
              maxLength: 40
              minLength: 1
            paymentToolToken:
              description: Токен платежного средства, предоставленного плательщиком
              type: string
              maxLength: 1000
            paymentToolDetails:
              $ref: '#/components/schemas/PaymentToolDetails'
    ClientInfo:
      description: Данные клиентского устройства плательщика
      type: object
      required:
        - fingerprint
      properties:
        fingerprint:
          description: Уникальный отпечаток user agent'а плательщика
          type: string
          maxLength: 1000
        ip:
          description: IP-адрес плательщика
          type: string
          format: ip-address
          maxLength: 45
    PaymentResource:
      type: object
      description: Данные одноразового платежного средства
      required:
        - paymentToolToken
      properties:
        paymentToolToken:
          description: Токен платежного средства, предоставленного плательщиком
          type: string
          maxLength: 1000
        paymentSession:
          description: Идентификатор платежной сессии
          type: string
          maxLength: 1000
        paymentToolDetails:
          $ref: '#/components/schemas/PaymentToolDetails'
        clientInfo:
          allOf:
            - $ref: '#/components/schemas/ClientInfo'
    ContactInfo:
      description: Контактные данные
      type: object
      properties:
        email:
          description: Адрес электронной почты
          type: string
          format: email
          maxLength: 100
        phoneNumber:
          description: |
            Номер мобильного телефона с международным префиксом согласно
            [E.164](https://en.wikipedia.org/wiki/E.164).
          type: string
          format: ^\+\d{4,15}$
    PaymentResourcePayer:
      type: object
      description: Одноразовое платежное средство
      allOf:
        - $ref: '#/components/schemas/Payer'
        - $ref: '#/components/schemas/PaymentResource'
        - type: object
          required:
            - contactInfo
          properties:
            contactInfo:
              $ref: '#/components/schemas/ContactInfo'
    PaymentRecurrentParent:
      type: object
      description: >-
        Родительский платеж, на основе которого создан текущий рекуррентный
        платеж
      required:
        - invoiceID
        - paymentID
      properties:
        invoiceID:
          description: Идентификатор инвойса
          type: string
        paymentID:
          description: Идентификатор платежа
          type: string
    RecurrentPayer:
      type: object
      description: Многоразовое платежное средство на основе другого платежа
      allOf:
        - $ref: '#/components/schemas/Payer'
        - type: object
          required:
            - contactInfo
            - recurrentParentPayment
          properties:
            contactInfo:
              $ref: '#/components/schemas/ContactInfo'
            recurrentParentPayment:
              $ref: '#/components/schemas/PaymentRecurrentParent'
            paymentToolToken:
              description: Токен платежного средства, предоставленного плательщиком
              type: string
              maxLength: 1000
            paymentToolDetails:
              $ref: '#/components/schemas/PaymentToolDetails'
    PaymentFlow:
      type: object
      required:
        - type
      properties:
        type:
          description: Тип процесса выполнения платежа
          type: string
          enum:
            - PaymentFlowInstant
            - PaymentFlowHold
      discriminator:
        propertyName: type
        mapping:
          PaymentFlowInstant: '#/components/schemas/PaymentFlowInstant'
          PaymentFlowHold: '#/components/schemas/PaymentFlowHold'
    PaymentFlowInstant:
      type: object
      allOf:
        - $ref: '#/components/schemas/PaymentFlow'
    PaymentFlowHold:
      type: object
      allOf:
        - $ref: '#/components/schemas/PaymentFlow'
        - type: object
          required:
            - onHoldExpiration
          properties:
            onHoldExpiration:
              description: Политика управления удержанием денежных средств
              type: string
              default: cancel
              enum:
                - cancel
                - capture
            heldUntil:
              description: Дата и время, до которого происходит удержание денежных средств
              type: string
              format: date-time
    GeoLocationInfo:
      description: Информация о геопозиции
      type: object
      required:
        - cityGeoID
        - countryGeoID
      properties:
        cityGeoID:
          type: integer
          format: int32
        countryGeoID:
          type: integer
          format: int32
    TransactionInfo:
      type: object
      properties:
        rrn:
          description: Retrieval Reference Number
          type: string
        approvalCode:
          description: Authorization Approval Code
          type: string
    PaymentMakeRecurrent:
      description: >
        Признак создания родительского рекуррентного платежа.

        Успешно проведеный платеж с этим признаком можно использовать как
        родительский в других рекуррентных платежах.
      type: boolean
      default: false
    PaymentSearchResult:
      type: object
      allOf:
        - $ref: '#/components/schemas/PaymentStatus'
        - type: object
          required:
            - id
            - invoiceID
            - createdAt
            - amount
            - currency
            - payer
            - flow
          properties:
            id:
              description: Идентификатор платежа
              type: string
            shortID:
              description: Cокращенный идентификатор платежа и инвойса (spid)
              type: string
            invoiceID:
              description: Идентификатор инвойса, в рамках которого был создан платеж
              type: string
            externalID:
              description: Внешний идентификатор
              type: string
            shopID:
              description: Идентификатор магазина, в рамках которого был создан платеж
              type: string
            createdAt:
              description: Дата и время создания
              type: string
              format: date-time
            amount:
              description: >
                Стоимость предлагаемых товаров или услуг, в минорных денежных

                единицах, например в копейках в случае указания российских
                рублей в

                качестве валюты.
              type: integer
              format: int64
              minimum: 1
            fee:
              description: Комиссия системы, в минорных денежных единицах
              type: integer
              format: int64
              minimum: 0
            currency:
              $ref: '#/components/schemas/Currency'
            payer:
              $ref: '#/components/schemas/Payer'
            flow:
              $ref: '#/components/schemas/PaymentFlow'
            geoLocationInfo:
              $ref: '#/components/schemas/GeoLocationInfo'
            metadata:
              description: Связанные с платежом метаданные
              type: object
            statusChangedAt:
              description: Дата и время изменения статуса платежа
              type: string
              format: date-time
            transactionInfo:
              $ref: '#/components/schemas/TransactionInfo'
            makeRecurrent:
              $ref: '#/components/schemas/PaymentMakeRecurrent'
    RefundStatus:
      type: object
      required:
        - status
      properties:
        status:
          description: Статус возврата
          type: string
          enum:
            - pending
            - succeeded
            - failed
        error:
          description: >
            Данные ошибки, возникшей в процессе проведения возврата, в случае
            если

            возврат был неуспешен
          type: object
          required:
            - code
            - message
          properties:
            code:
              description: Код ошибки, пригодный для обработки автоматическими системами
              type: string
            message:
              description: Описание ошибки, пригодное для восприятия человеком
              type: string
    Refund:
      type: object
      allOf:
        - type: object
          required:
            - id
            - createdAt
            - amount
            - currency
            - shopID
          properties:
            id:
              description: Идентификатор возврата
              type: string
            externalID:
              description: Внешний идентификатор
              type: string
            createdAt:
              description: Дата и время осуществления
              type: string
              format: date-time
            amount:
              description: >
                Сумма возврата, в минорных денежных единицах, например в
                копейках в случае указания российских рублей в качестве валюты.
              type: integer
              format: int64
              minimum: 1
            currency:
              $ref: '#/components/schemas/Currency'
            reason:
              description: Причина осуществления возврата
              type: string
            shopID:
              description: Идентификатор магазина
              type: string
        - $ref: '#/components/schemas/RefundStatus'
    RefundSearchResult:
      type: object
      allOf:
        - type: object
          required:
            - invoiceID
            - paymentID
          properties:
            invoiceID:
              description: Идентификатор инвойса
              type: string
            paymentID:
              description: Идентификатор платежа
              type: string
        - $ref: '#/components/schemas/Refund'
    ChargebackStatus:
      description: Статус чарджбэка
      type: string
      enum:
        - pending
        - accepted
        - rejected
        - cancelled
    ChargebackStage:
      description: Этап прохождения чарджбэка
      type: string
      enum:
        - chargeback
        - pre_arbitration
        - arbitration
    ChargebackCategory:
      description: Категория чарджбэка
      type: string
      enum:
        - fraud
        - dispute
        - authorisation
        - processing_error
    ChargebackReason:
      description: Данные о причине чарджбэка
      type: object
      required:
        - category
      properties:
        code:
          description: Код категории
          type: string
        category:
          $ref: '#/components/schemas/ChargebackCategory'
    Content:
      type: object
      properties:
        type:
          description: Тип данных
          type: string
        data:
          description: Данные
          type: string
          format: byte
    Chargeback:
      type: object
      required:
        - invoiceId
        - paymentId
        - chargebackId
        - shopID
        - createdAt
        - bodyAmount
        - bodyCurrency
        - levyAmount
        - levyCurrency
      properties:
        invoiceId:
          description: Идентификатор инвойса
          type: string
        paymentId:
          description: Идентификатор платежа
          type: string
        chargebackId:
          description: Идентификатор чарджбэка
          type: string
        externalId:
          description: Внешний идентификатор
          type: string
        shopID:
          description: Идентификатор магазина
          type: string
        createdAt:
          description: Дата и время создания
          type: string
          format: date-time
        levyAmount:
          description: Сумма списываемых средств у чарджбека
          type: integer
          format: int64
          minimum: 1
        levyCurrency:
          $ref: '#/components/schemas/Currency'
        bodyAmount:
          description: Сумма чарджбэка
          type: integer
          format: int64
          minimum: 1
        bodyCurrency:
          $ref: '#/components/schemas/Currency'
        fee:
          description: Комиссия системы, в минорных денежных единицах
          type: integer
          format: int64
          minimum: 0
        providerFee:
          description: Комиссия провайдера, в минорных денежных единицах
          type: integer
          format: int64
          minimum: 0
        externalFee:
          description: Комиссия внешней системы системы, в минорных денежных единицах
          type: integer
          format: int64
          minimum: 0
        status:
          $ref: '#/components/schemas/ChargebackStatus'
        stage:
          $ref: '#/components/schemas/ChargebackStage'
        chargebackReason:
          $ref: '#/components/schemas/ChargebackReason'
        content:
          $ref: '#/components/schemas/Content'
    PayoutToolDetails:
      description: Данные средства вывода
      type: object
      properties:
        detailsType:
          description: Тип средства вывода
          type: string
      required:
        - detailsType
      discriminator:
        propertyName: detailsType
        mapping:
          PayoutToolDetailsBankAccount: '#/components/schemas/PayoutToolDetailsBankAccount'
          PayoutToolDetailsInternationalBankAccount: '#/components/schemas/PayoutToolDetailsInternationalBankAccount'
          PayoutToolDetailsPaymentsInstitutionAccount: '#/components/schemas/PayoutToolDetailsPaymentInstitutionAccount'
          PayoutToolDetailsWalletInfo: '#/components/schemas/PayoutToolDetailsWalletInfo'
    BankAccount:
      description: >
        Данные расчётного счёта в банковской организации, ведущей деятельность
        под

        юрисдикцией РФ.
      type: object
      required:
        - account
        - bankName
        - bankPostAccount
        - bankBik
      properties:
        account:
          description: Номер счёта
          type: string
          pattern: ^\d{20}$
        bankName:
          description: Наименование юридического лица банковской организации
          type: string
          maxLength: 100
        bankPostAccount:
          type: string
          pattern: ^\d{20}$
        bankBik:
          description: БИК банковской организации
          type: string
          pattern: ^\d{9}$
    PayoutToolDetailsBankAccount:
      type: object
      allOf:
        - $ref: '#/components/schemas/PayoutToolDetails'
        - $ref: '#/components/schemas/BankAccount'
    InternationalBankDetails:
      description: Данные международной банковской организации
      type: object
      properties:
        bic:
          description: >
            Business Identifier Code [ISO
            9362](https://en.wikipedia.org/wiki/ISO_9362).
          type: string
          pattern: ^([A-Z0-9]{8}|[A-Z0-9]{11})$
          example: |
            RZBAATWW
        abartn:
          description: >
            [ABA Routing Transit
            Number](https://en.wikipedia.org/wiki/ABA_routing_transit_number)

            банковской организации, специфичный для банковской системы USA.
          type: string
          pattern: ^[0-9]{9}$
          example: '129131673'
        name:
          description: Наименование юридического лица банковской организации
          type: string
          maxLength: 100
          example: |
            RAIFFEISEN BANK INTERNATIONAL AG
        countryCode:
          x-merge-obj:
            - $ref: ../schemas/Residence.yaml
            - description: >
                Страна резиденции банковской организации,

                alpha-3 код по стандарту [ISO
                3166-1](https://en.wikipedia.org/wiki/ISO_3166-1)
          type: string
          pattern: ^[A-Z]{2}$
          example: AT
        address:
          description: Адрес юридического лица банковской организации
          type: string
          maxLength: 1000
          example: |
            1030, VIENNA, AM STADTPARK 9
    InternationalBankAccount:
      description: Данные международного банковского счёта
      type: object
      properties:
        number:
          description: |
            Номер счёта
          type: string
          pattern: ^[0-9A-Z]{8,40}$
          example: '123006951'
        iban:
          description: >
            International Bank Account Number [ISO
            13616](https://en.wikipedia.org/wiki/International_Bank_Account_Number)
          type: string
          pattern: ^[A-Z0-9]{3,35}$
          example: GR1601101250000000012300695
        bankDetails:
          $ref: '#/components/schemas/InternationalBankDetails'
        correspondentBankAccount:
          $ref: '#/components/schemas/InternationalCorrespondentBankAccount'
    InternationalCorrespondentBankAccount:
      allOf:
        - description: Данные корреспондентского счёта указанного банка
        - $ref: '#/components/schemas/InternationalBankAccount'
    PayoutToolDetailsInternationalBankAccount:
      type: object
      allOf:
        - $ref: '#/components/schemas/PayoutToolDetails'
        - $ref: '#/components/schemas/InternationalBankAccount'
    PaymentInstitutionAccount:
      description: Аккаунт платёжной организации
      type: object
    PayoutToolDetailsPaymentInstitutionAccount:
      type: object
      allOf:
        - $ref: '#/components/schemas/PayoutToolDetails'
        - $ref: '#/components/schemas/PaymentInstitutionAccount'
    PayoutToolDetailsWalletInfo:
      type: object
      allOf:
        - $ref: '#/components/schemas/PayoutToolDetails'
        - type: object
          required:
            - walletID
          properties:
            walletID:
              description: Идентификатор кошелька
              type: string
              maxLength: 40
              minLength: 1
    Payout:
      type: object
      required:
        - id
        - shopID
        - createdAt
        - amount
        - currency
        - payoutToolDetails
      properties:
        id:
          description: Идентификатор выплаты
          type: string
        shopID:
          description: Идентификатор магазина
          type: string
        createdAt:
          description: Дата и время создания
          type: string
          format: date-time
        cancellationDetails:
          description: Детали отмены выплаты
          type: string
          maxLength: 1000
        amount:
          description: |
            Сумма выплаты в минорных денежных
            единицах, например в копейках в случае указания российских рублей в
            качестве валюты.
          type: integer
          format: int64
          minimum: 1
        fee:
          description: Комиссия системы, в минорных денежных единицах
          type: integer
          format: int64
          minimum: 0
        currency:
          $ref: '#/components/schemas/Currency'
        payoutToolDetails:
          $ref: '#/components/schemas/PayoutToolDetails'
        status:
          description: Статус выплаты
          type: string
        metadata:
          description: >
            Произвольный, специфичный для клиента API и непрозрачный для системы
            набор данных,

            ассоциированных с данной выплатой
          type: object
          example:
            payoutDesc: Custom payout
    InvoiceTemplateDetails:
      type: object
      properties:
        templateType:
          type: string
      required:
        - templateType
      discriminator:
        propertyName: templateType
        mapping:
          InvoiceTemplateMultiLine: '#/components/schemas/InvoiceTemplateCart'
          invoiceTemplateSingleLine: '#/components/schemas/InvoiceTemplateProduct'
    InvoiceTemplateCart:
      type: object
      allOf:
        - $ref: '#/components/schemas/InvoiceTemplateDetails'
        - required:
            - cart
            - currency
          properties:
            cart:
              $ref: '#/components/schemas/InvoiceCart'
            currency:
              $ref: '#/components/schemas/Currency'
    InvoiceTemplateProductPrice:
      type: object
      required:
        - costType
      properties:
        costType:
          type: string
      discriminator:
        propertyName: costType
        mapping:
          fixed: '#/components/schemas/Cash'
          range: '#/components/schemas/CashRange'
          unlim: '#/components/schemas/CashUnlim'
    Cash:
      type: object
      allOf:
        - $ref: '#/components/schemas/InvoiceTemplateProductPrice'
        - required:
            - amount
            - currency
          properties:
            amount:
              type: integer
              format: int64
              minimum: 1
            currency:
              $ref: '#/components/schemas/Currency'
    CashRange:
      type: object
      allOf:
        - $ref: '#/components/schemas/InvoiceTemplateProductPrice'
        - required:
            - upperBound
            - lowerBound
            - currency
          properties:
            upperBound:
              description: Верхняя (включительная) граница стоимости товаров или услуг.
              type: integer
              format: int64
              minimum: 1
            lowerBound:
              description: Нижняя (включительная) граница стоимости товаров или услуг.
              type: integer
              format: int64
              minimum: 1
            currency:
              $ref: '#/components/schemas/Currency'
    CashUnlim:
      type: object
      allOf:
        - $ref: '#/components/schemas/InvoiceTemplateProductPrice'
    InvoiceTemplateProduct:
      type: object
      allOf:
        - $ref: '#/components/schemas/InvoiceTemplateDetails'
        - required:
            - product
            - price
            - metadata
          properties:
            product:
              description: Наименование предлагаемых товаров или услуг
              type: string
              maxLength: 1000
            price:
              $ref: '#/components/schemas/InvoiceTemplateProductPrice'
            metadata:
              description: Связанные с товарами или услугами метаданные
              type: object
    InvoiceTemplate:
      type: object
      allOf:
        - type: object
          required:
            - eventCreatedAt
            - shopID
            - invoiceTemplateID
            - invoiceValidUntil
            - product
          properties:
            eventCreatedAt:
              description: Дата и время создания
              type: string
              format: date-time
            shopID:
              description: Идентификатор магазина
              type: string
            invoiceTemplateId:
              description: Идентификатор шаблона инвойса
              type: string
            invoiceValidUntil:
              description: Дата и время создания
              type: string
              format: date-time
            product:
              description: Наименование предлагаемых товаров или услуг
              type: string
              maxLength: 100
            description:
              description: Описание предлагаемых товаров или услуг
              type: string
            details:
              $ref: '#/components/schemas/InvoiceTemplateDetails'
            name:
              description: Имя шаблона инвойса
              type: string
            invoiceTemplateStatus:
              description: Статус шаблона инвойса
              type: string
              enum:
                - created
                - deleted
            invoiceTemplateCreatedAt:
              description: Дата и время создания
              type: string
              format: date-time
    FileMeta:
      type: object
      required:
        - id
        - filename
      properties:
        id:
          description: Идентификатор файла
          type: string
          maxLength: 40
          minLength: 1
        filename:
          description: Имя файла
          type: string
          maxLength: 1000
          minLength: 1
        signatures:
          type: object
          description: Сигнатуры файла
          required:
            - md5
            - sha256
          properties:
            md5:
              description: MD5 содержимого файла
              type: string
              maxLength: 32
              minLength: 32
            sha256:
              description: SHA256 содержимого файла
              type: string
              maxLength: 64
              minLength: 64
    Report:
      type: object
      required:
        - id
        - createdAt
        - fromTime
        - toTime
        - status
        - reportType
        - partyID
        - files
      properties:
        id:
          description: Идентификатор отчета
          type: integer
          format: int64
        createdAt:
          description: Дата и время создания
          type: string
          format: date-time
        fromTime:
          description: Дата и время начала периода
          type: string
          format: date-time
        toTime:
          description: Дата и время конца периода
          type: string
          format: date-time
        status:
          description: Статус формирования отчета
          type: string
          enum:
            - pending
            - created
            - canceled
        reportType:
          description: Тип отчета
          type: string
          enum:
            - provisionOfService
            - paymentRegistry
            - paymentRegistryByPayout
        partyID:
          description: Идентификатор участника
          type: string
          maxLength: 40
          minLength: 1
        shopID:
          description: Идентификатор магазина
          type: string
          maxLength: 40
          minLength: 1
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileMeta'
    GeneralError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ReportLink:
      type: object
      required:
        - url
      properties:
        url:
          description: URL файла
          type: string
  responses:
    DefaultLogicError:
      description: Неверные данные
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DefaultLogicError'
    Unauthorized:
      description: Ошибка авторизации
    SearchRequestError:
      description: Неверные данные
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchRequestError'
    NotFound:
      description: Заданный ресурс не найден
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GeneralError'
